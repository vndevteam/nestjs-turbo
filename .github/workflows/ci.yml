name: CI
on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: [opened, synchronize]

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and test
    timeout-minutes: 15
    # skip ci if PR has label 'skip-ci' or 'skip-actions'
    if: |
      !contains(github.event.pull_request.labels.*.name, 'skip-ci') &&
      !contains(github.event.pull_request.labels.*.name, 'skip-actions')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [20.16.0]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test
